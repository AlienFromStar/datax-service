package com.globalegrow.bigdata.test;

/**
 * @author ChengJie
 * @desciption
 * @date 2019/7/25 9:23
 **/
import java.sql.*;
import java.util.Properties;

public class DerbyTest {

    private final static String DB_URL = "jdbc:derby:D:\\Program Files\\derby\\db-derby-10.8.1.2-bin\\bin\\ij_cmd_test_db";
    private final static String DERBY_DRIVER = "org.apache.derby.jdbc.EmbeddedDriver";

    public static void main(String[] args) {
        Connection conn = null;
        try {
            Class.forName(DERBY_DRIVER);
            Properties properties = new Properties();
             properties.put("create", "true"); // 新建数据库
             properties.put("user", "APP");     // 用户名
             properties.put("password", "APP"); // 密码
             properties.put("retreiveMessagesFromServerOnGetMessage", "true");
            conn = DriverManager.getConnection(DB_URL, properties);

            Statement stat = conn.createStatement();
//            stat.execute("CREATE SCHEMA datax_metas AUTHORIZATION datax_metas");
//            stat.execute("CREATE TABLE datax_report (jobId bigint,jobName varchar(128),jobState int)");

            ResultSet result = stat.executeQuery("CREATE TABLE datax_report (\n" +
                    "  id bigint NOT NULL generated by default as identity,\n" +
                    "  jobId bigint,\n" +
                    "  jobName varchar(128) DEFAULT '',\n" +
                    "  jobState int DEFAULT 0,\n" +
                    "  progress int DEFAULT 0,\n" +
                    "  vmInfo varchar(256) DEFAULT '',\n" +
                    "  taskCount int DEFAULT 0,\n" +
                    "  startTimeStamp bigint DEFAULT 0,\n" +
                    "  endTimeStamp bigint DEFAULT 0,\n" +
                    "  startTransferTimeStamp bigint DEFAULT 0,\n" +
                    "  endTransferTimeStamp bigint DEFAULT 0,\n" +
                    "  createTime bigint DEFAULT 0,\n" +
                    "  runTimes varchar(20) DEFAULT '',\n" +
                    "  avgFlow varchar(20) DEFAULT '',\n" +
                    "  speed varchar(20) DEFAULT '',\n" +
                    "  totalRecordCount varchar(20) DEFAULT '',\n" +
                    "  totalFailRecordCount varchar(20) DEFAULT '',\n" +
                    "  status int DEFAULT 0,\n" +
                    "  failCount varchar(20) DEFAULT '',\n" +
                    "  exceptionLog CLOB ,\n" +
                    "  logStatistics CLOB,\n" +
                    "  configurationInfo CLOB,\n" +
                    "  remark varchar(128) DEFAULT '',\n" +
                    "  constraint configinfo_id_key PRIMARY KEY (id)\n" +
                    "  )");

            while (result.next()) {
                System.out.println("序号 : " + result.getInt(1));
            }
            result.close();
            stat.close();
            conn.close();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // 内嵌模式数据库操作用完之后需要关闭数据库,这里没有执行数据库名称则全部关闭.
            try {
                DriverManager.getConnection("jdbc:derby:;shutdown=true");
            } catch (SQLException e) {
                e.getMessage();
            }
        }
    }
}